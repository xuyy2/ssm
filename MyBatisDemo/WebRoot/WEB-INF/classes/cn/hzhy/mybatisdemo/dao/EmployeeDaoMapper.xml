<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" 
"http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="cn.hzhy.mybatisdemo.dao.EmployeeDao">
   <!-- 配置结果集映射，定义表字段和实体类属性之间的映射关系 -->
  <resultMap id="employeeResultMap" type="cn.hzhy.mybatisdemo.entity.Employee">
		<id property="empId" column="emp_id" />
		<result property="empName" column="emp_name" />
		<result property="password" column="password" />
		<result property="sex" column="sex" />
		<result property="birthday" column="birthday" />
		<result property="roleId" column="role_id" />
		<result property="status" column="status" />
  </resultMap>

  <!-- Select元素用于定义一个SQL映射语句，id属性的取值必须和数据库DAO接口中的方法名一致-->	
  <select id="countAll" resultType="int">
  		SELECT count(*) FROM employees
  </select>
  
  <!-- <select id="selectAll" resultType="cn.jbit.mybatisdemo.entity.Emp">
  		SELECT
  			empno     	AS empno,
          	ename     	AS empName,
          	hiredate    AS hireDate,
          	job       	AS job,
          	sal         AS salary,
          	mgr         AS mgr,
          	comm        AS comm,
          	deptno
      	FROM EMP
  </select>
  
  <select id="findEmpByEmpNo" parameterType="int" resultType="cn.jbit.mybatisdemo.entity.Emp">
  		SELECT
  			empno,
          	ename     	AS empName,
          	hiredate,
          	job,
          	sal         AS salary,
          	mgr,
          	comm,
          	deptno
      	FROM EMP where empno= #{empno}
  </select>
  
  <select id="findEmpByEmpNoMapper" parameterType="int" resultType="cn.jbit.mybatisdemo.entity.Emp">
  		SELECT
  			empno,
          	ename     	AS empName,
          	hiredate,
          	job,
          	sal         AS salary,
          	mgr,
          	comm,
          	deptno
      	FROM EMP where empno= #{empNo}
  </select>
  
  <select id="findEmpByEmpNoResultMap" parameterType="int" resultMap="empResultMap">
  		SELECT * FROM EMP WHERE empno= #{empNo}
  </select>
  
  <insert id="insertEmp" parameterType="Emp">
	INSERT INTO emp(empno, ename, job, mgr,hiredate, sal,comm,deptno)
	VALUES
	(#{empNo}, #{empName}, #{job}, #{mgr}, #{hireDate},
	 #{salary},#{comm},#{deptNo}
	)
  </insert>
  
  <insert id="insertEmpUseKey" parameterType="Emp">
  	<selectKey keyProperty="empNo" resultType="int" order="BEFORE">
		SELECT seq_id.nextVal FROM dual
	</selectKey>
	INSERT INTO emp(empno, ename, job, mgr,hiredate, sal,comm,deptno)
	VALUES
	(#{empNo}, #{empName}, #{job}, #{mgr}, #{hireDate},
	 #{salary},#{comm,jdbcType=DOUBLE},#{deptNo}
	)
  </insert>
  
  <delete id="deleteEmp" parameterType="int">
	DELETE FROM emp WHERE empno= #{empNo}
  </delete>
  
  <update id="updateEmp" parameterType="cn.jbit.mybatisdemo.entity.Emp">
	UPDATE EMP SET ename=#{empName},job=#{job},mgr=#{mgr},hiredate=#{hireDate},
	               sal=#{salary},comm=#{comm},deptno=#{deptNo} 
	       WHERE empno= #{empNo}
  </update>
  <select id="findEmpByExampleIf" parameterType="Emp" resultMap="empResultMap">
  		SELECT * FROM EMP WHERE 1 = 1
  		<if test ="deptNo != null">
  			and deptno= #{deptNo}
  		</if>
  		<if test ="empName != null">
  			and ename= #{empName}
  		</if>
  </select>
  <select id="findEmpByExampleChoose" parameterType="Emp" resultMap="empResultMap">
  		SELECT * FROM EMP WHERE 1 = 1
  		<choose>
	  		<when test ="deptNo != null">
	  			and deptno= #{deptNo}
	  		</when>
  			<when test ="empName != null">
	  			and ename= #{empName}
	  		</when>
	  		<otherwise>
	  			and hiredate > #{hireDate}
	  		</otherwise>
  		</choose>
  </select> 
  <select id="findEmpByExampleWhere" parameterType="Emp" resultMap="empResultMap">
  		SELECT * FROM EMP
      <where>
        <if test ="deptNo != null">
          and deptno= #{deptNo}
        </if>
        <if test ="empName != null">
          and ename like #{empName}
        </if>
      </where>
  </select>
  
  <update id="updateEmpUseSet" parameterType="cn.jbit.mybatisdemo.entity.Emp">
	UPDATE EMP
		<set>
			<if test="empName != null">ename=#{empName},</if>
			<if test="job != null">job=#{job},</if>
			<if test="mgr != null">mgr=#{mgr},</if>
			<if test="hireDate != null">hiredate=#{hireDate},</if>
			<if test="salary != null">sal=#{salary},</if>
			<if test="comm != null">comm=#{comm},</if>
			<if test="deptNo != null">deptno=#{deptNo},</if>
		</set>
	       WHERE empno= #{empNo}
  </update>
  
  <select id="findEmpByPage" parameterType="hashmap" resultMap="empResultMap">
  		SELECT * FROM (
  		SELECT e.*, ROWNUM rn FROM(
  			SELECT * from emp a 
  			<where>
        		<if test ="deptNo != null and deptNo !=0 ">
          			and a.deptno= #{deptNo}
        		</if>
        		<if test ="empName != null">
          			and a.ename like '%${empName}%'
        		</if>
        		<if test ="startDate != null">
          			and a.hireDate >= #{startDate}
        		</if>
        		<if test ="endDate != null">
          			and a.hireDate <![CDATA[ < ]]>=#{endDate}
        		</if>
      		</where>
  			order by a.hiredate desc) e WHERE rownum <![CDATA[ < ]]>=#{endRow}) t where t.rn >=#{startRow}
  </select>
  
   <select id="getTotalCount" parameterType="hashmap" resultType="int">
  			SELECT count(*) from emp a 
  			<where>
        		<if test ="deptNo != null and deptNo !=0">
          			and a.deptno= #{deptNo}
        		</if>
        		<if test ="empName != null">
          			and a.ename like '%${empName}%'
        		</if>
        		<if test ="startDate != null">
          			and a.hireDate >= #{startDate}
        		</if>
        		<if test ="endDate != null">
          			and a.hireDate <![CDATA[ < ]]>=#{endDate}
        		</if>
      		</where>
  </select> -->
  
 </mapper>
